# Generated by Django 2.0.6 on 2021-05-16 15:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passage_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата прохождения')),
                ('status', models.CharField(choices=[('passed', 'passed'), ('not passed', 'not passed'), ('pending', 'pending')], default='pending', max_length=128, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Попытки',
                'verbose_name_plural': 'Попытки',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200, verbose_name='Автор')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('approved_comment', models.BooleanField(default=False, verbose_name='Подтверженние комментария')),
            ],
            options={
                'verbose_name': 'Комментарии',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='OpenQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=128, null=True, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Открытые вопросы',
                'verbose_name_plural': 'Открытые вопросы',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст новости')),
                ('news_description', models.TextField(default='', verbose_name='Превью новости')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('published_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Новости',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.PositiveIntegerField(unique=True, verbose_name='ID polzov')),
                ('name', models.TextField(verbose_name='Имя пользователя')),
                ('instructor', models.CharField(blank=True, max_length=50, null=True, verbose_name='Инструктор')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, verbose_name='Номер телефона')),
                ('medical_certificate', models.BooleanField(default=False, verbose_name='Медицинская справка')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='аватар')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=128, null=True, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Закрытые вопросы',
                'verbose_name_plural': 'Закрытые вопросы',
            },
        ),
        migrations.CreateModel(
            name='StoreAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(choices=[('close', 'close'), ('open', 'open')], default='close', max_length=128, verbose_name='Тип теста')),
                ('open_answer', models.CharField(blank=True, max_length=512, null=True, verbose_name='Открытый ответ')),
            ],
            options={
                'verbose_name': 'Хранилище ответов',
                'verbose_name_plural': 'Хранилище ответов',
            },
        ),
        migrations.CreateModel(
            name='StoreQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(choices=[('close', 'close'), ('open', 'open')], default='close', max_length=128, verbose_name='Тип теста')),
                ('close_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Question', verbose_name='Закрытый вопрос')),
                ('open_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.OpenQuestion', verbose_name='Открытый вопрос')),
            ],
            options={
                'verbose_name': 'Хранилище вопросов',
                'verbose_name_plural': 'Хранилище вопросов',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Заголовок')),
                ('date_create', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('questions', models.ManyToManyField(to='blog.StoreQuestion', verbose_name='Вопросы')),
            ],
            options={
                'verbose_name': 'Тесты',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('passed', 'passed'), ('not passed', 'not passed'), ('pending', 'pending')], default='pending', max_length=128, verbose_name='Статус')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.StoreAnswer', verbose_name='Ответ')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.StoreQuestion', verbose_name='Вопрос')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответы пользователей',
                'verbose_name_plural': 'Ответы пользователей',
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Вариант ответа')),
            ],
            options={
                'verbose_name': 'Варианты ответа',
                'verbose_name_plural': 'Варианты ответа',
            },
        ),
        migrations.AddField(
            model_name='storeanswer',
            name='close_answer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Variant', verbose_name='Закрытый ответ'),
        ),
        migrations.AddField(
            model_name='question',
            name='right_answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='right', to='blog.Variant', verbose_name='Правильный ответ'),
        ),
        migrations.AddField(
            model_name='question',
            name='variants',
            field=models.ManyToManyField(to='blog.Variant', verbose_name='Варианты ответа'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.Post'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Test', verbose_name='Тест'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='attempt',
            name='user_answer',
            field=models.ManyToManyField(to='blog.UserAnswer', verbose_name='Ответ пользователя'),
        ),
    ]
